### TODO/notes/issues:
'''
2016-11-21 Simen M:
    resize-method in communication is temporarily replaced by the resize function because the arrays are references
        this must be fixed!
    spatial properties to calculate cell/rank from position are given directly in communication.py
        change this to be initialized in main function?
    import comm = MPI.COMM_WORLD from main into communication-module?
    generate initial grid in seperate file/scripts?
        DONE in IO.py if it's run seperately
    resize XY to fit XY1, now communication is done only one time
        this MUST be done
    only plot active particles
        use active-array in plot to only plot active particles
'''
2016-11-22
    particle_n, the length of local arrays, do not pass it around, but calculate it where it is used
        particle_n was calculated from id, which had length 1000, but the actual number of particles (from coordinate-arrays) was (floor(sqrt(1000)))^2 = 961
        FIXED in IO.create_grid_of_particles(N, w): # N is rounded down to nearest perfect square
    resize
        use refcheck?
        
changes:
    IO.create_grid_of_particles(N, w): # N is rounded down to nearest perfect square
    passing mpi.communicator to communicate.exchange-function
    not using particle_n as a variable, but calculate it locally
    
discussion:
    int() vs np.floor(). int rounds towards 0, floor always down
    
2016-11-23
    changed XY into two seperate arrays: x and y
        in transport
    plot
        added optional-name argument
        
questions
       how to implement rk4 with seperate x- and y vector
       
2016-11-24
    bug/issues:
        in transport.move_active_to_front(), particle_active has dtype float, so it can not be used as indices
        proposed solution: IO.create_grid... create empty grid for "emtpy ranks", does this cause the bug?
            FIXED: the empty active-arrays now have dtype=bool (and ids have dtype=int)
        buffer too small for 10e4 particles
            increased buffer_overhead to 10000 particles
        buffer overhead is still too small for 10e5 particles
    changes:
        plot now only takes in the active particles
            plot.plot(XY[0,active], XY[1,active] ...
        transport now only takes in (and changes/overwrite) the active particles
            
2016-11-28
    changes:
        updated plot functions with respect to "input/output" and added "plot particles from all ranks at time t"
        added plot function to plot all ranks togheter, each with their own colour